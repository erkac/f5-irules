when HTTP_REQUEST {

  log local0. "Hostname: [HTTP::host]."

  if { not ([HTTP::host] equals "vpn.targetty.com") } {
    ACCESS::disable

    if {[string tolower [HTTP::uri]] contains  "-dev"} {
      log local0. "URI: [HTTP::uri]"
      HTTP::respond 200 content {
        <html>
          <head>
              <title>targetty.com - DEV</title>
          </head>
          <body>
            TARGETTY DEV
          </body>
        </html>
      }
    } else {
      set hostpool [string tolower [HTTP::host]]_pool_https
      # Show us what the client sent in the host header - Turn this OFF in production
      #log local0. "Hostname: [HTTP::host] -> pool is $hostpool"
      # Use if/then with "Catch" to account for any bad host headers - otherwise TCL will throw an error to the client
      if { [catch {pool $hostpool} exc] } {
      # If a client sends a host header that does not match a pool, send to default respond
        HTTP::respond 200 content {
          <html>
            <head>
              <title>targetty.com - Apology Page</title>
            </head>
            <body>
              We are sorry, but the site you are looking for is temporarily out of service<br>
              If you feel you have reached this page in error, please try again.
            </body>
          </html>
        }
      }  
    }
  } else {
    log local0. "Hostname: [HTTP::host] -> APM VPN."
  }
}
